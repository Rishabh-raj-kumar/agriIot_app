buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2' // Correct placement
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22" // Correct placement
        classpath 'com.google.gms:google-services:4.3.13'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    configurations.all{
        resolutionStrategy.eachDependency{ details ->
            if(details.requested.group == 'org.jetbrains.kotlin'){
                details.useVersion "1.8.22"
            }
        }
    }
    subprojects {
        afterEvaluate { project ->
            if (project.hasProperty('android')) {
                project.android {
                    if (namespace == null) {
                        namespace project.group
                    }
                }
            }
        }
    }
}

rootProject.buildDir = "../build"
// ... other configurations like buildscript { ... } and allprojects { ... }

subprojects {
    afterEvaluate { project ->
        if (project.extensions.findByName("android") != null) {
            Integer pluginCompileSdk = project.android.compileSdk
            if (pluginCompileSdk != null && pluginCompileSdk < 31) {
                project.logger.error(
                        "Warning: Overriding compileSdk version in Flutter plugin: "
                        + project.name
                        + " from "
                        + pluginCompileSdk
                        + " to 31 (to work around https://issuetracker.google.com/issues/199180389)."
                        + "\nIf there is not a new version of " + project.name + ", consider filing an issue against "
                        + project.name
                        + " to increase their compileSdk to the latest (otherwise try updating to the latest version)."
                )
                project.android {
                    compileSdk 31
                }
            }
        }
    }

    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(":app")
}

// ... potentially other configurations like task clean(type: Delete) { ... }

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
